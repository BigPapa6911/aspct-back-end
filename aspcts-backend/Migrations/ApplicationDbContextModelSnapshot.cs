// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using aspcts_backend.Data;

#nullable disable

namespace aspcts_backend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("aspcts_backend.Models.Entities.Assessment", b =>
                {
                    b.Property<Guid>("AssessmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AssessmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AssessmentType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ChildId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OverallScore")
                        .HasColumnType("int");

                    b.Property<Guid>("PsychologistId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("AssessmentId");

                    b.HasIndex("ChildId");

                    b.HasIndex("PsychologistId");

                    b.ToTable("Assessments");

                    b.HasDiscriminator<string>("AssessmentType").HasValue("Assessment");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("aspcts_backend.Models.Entities.Child", b =>
                {
                    b.Property<Guid>("ChildId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AssignedPsychologistId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Diagnosis")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MedicalHistory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OnboardingDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PrimaryParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SecondaryParentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ChildId");

                    b.HasIndex("AssignedPsychologistId");

                    b.HasIndex("PrimaryParentId");

                    b.HasIndex("SecondaryParentId");

                    b.ToTable("Children");
                });

            modelBuilder.Entity("aspcts_backend.Models.Entities.ChildSupportingSkillProgress", b =>
                {
                    b.Property<Guid>("ProgressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChildId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("MasteryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SkillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("ProgressId");

                    b.HasIndex("SkillId");

                    b.HasIndex("ChildId", "SkillId")
                        .IsUnique();

                    b.ToTable("ChildSupportingSkillProgresses");
                });

            modelBuilder.Entity("aspcts_backend.Models.Entities.CommunicationMessage", b =>
                {
                    b.Property<Guid>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChildId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("MessageType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ReceiverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Subject")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("MessageId");

                    b.HasIndex("ChildId");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.ToTable("CommunicationMessages");
                });

            modelBuilder.Entity("aspcts_backend.Models.Entities.InterventionGoal", b =>
                {
                    b.Property<Guid>("GoalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AchievedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("MeasurementCriteria")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<Guid>("PlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProgressNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TargetBehavior")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime?>("TargetDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("GoalId");

                    b.HasIndex("PlanId");

                    b.ToTable("InterventionGoals");
                });

            modelBuilder.Entity("aspcts_backend.Models.Entities.InterventionPlan", b =>
                {
                    b.Property<Guid>("PlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChildId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Goals")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PsychologistId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("PlanId");

                    b.HasIndex("ChildId");

                    b.HasIndex("PsychologistId");

                    b.ToTable("InterventionPlans");
                });

            modelBuilder.Entity("aspcts_backend.Models.Entities.Milestone", b =>
                {
                    b.Property<Guid>("MilestoneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("DevelopmentalLevel")
                        .HasColumnType("int");

                    b.Property<string>("Domain")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.HasKey("MilestoneId");

                    b.HasIndex("DevelopmentalLevel", "Domain", "Order");

                    b.ToTable("Milestones");
                });

            modelBuilder.Entity("aspcts_backend.Models.Entities.Parent", b =>
                {
                    b.Property<Guid>("ParentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ChildRelationship")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ParentId");

                    b.HasIndex("UserId");

                    b.ToTable("Parents");
                });

            modelBuilder.Entity("aspcts_backend.Models.Entities.Psychologist", b =>
                {
                    b.Property<Guid>("PsychologistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClinicName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("LicenseNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Specialization")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PsychologistId");

                    b.HasIndex("UserId");

                    b.ToTable("Psychologists");
                });

            modelBuilder.Entity("aspcts_backend.Models.Entities.Report", b =>
                {
                    b.Property<Guid>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChildId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClinicalNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndPeriod")
                        .HasColumnType("datetime2");

                    b.Property<string>("FilePath")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsSharedWithParent")
                        .HasColumnType("bit");

                    b.Property<Guid>("PsychologistId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ReportDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReportType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("StartPeriod")
                        .HasColumnType("datetime2");

                    b.Property<string>("SummaryForParent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("ReportId");

                    b.HasIndex("ChildId");

                    b.HasIndex("PsychologistId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("aspcts_backend.Models.Entities.Resource", b =>
                {
                    b.Property<Guid>("ResourceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("FilePath")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("ResourceId");

                    b.ToTable("Resources");
                });

            modelBuilder.Entity("aspcts_backend.Models.Entities.Session", b =>
                {
                    b.Property<Guid>("SessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChildId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<bool>("IsSharedWithParent")
                        .HasColumnType("bit");

                    b.Property<string>("NotesWhatWasDiagnosed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotesWhatWasDone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotesWhatWillBeDone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PsychologistId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("SessionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SessionType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("SessionId");

                    b.HasIndex("ChildId");

                    b.HasIndex("PsychologistId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("aspcts_backend.Models.Entities.SupportingSkill", b =>
                {
                    b.Property<Guid>("SkillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Domain")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("SkillId");

                    b.ToTable("SupportingSkills");
                });

            modelBuilder.Entity("aspcts_backend.Models.Entities.TaskAnalysisStep", b =>
                {
                    b.Property<Guid>("StepId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsMastered")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("MasteryDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MilestoneId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.HasKey("StepId");

                    b.HasIndex("MilestoneId");

                    b.ToTable("TaskAnalysisSteps");
                });

            modelBuilder.Entity("aspcts_backend.Models.Entities.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContactNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("aspcts_backend.Models.Entities.BarriersAssessment", b =>
                {
                    b.HasBaseType("aspcts_backend.Models.Entities.Assessment");

                    b.Property<string>("BarrierScores")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QualitativeNotes")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Barriers");
                });

            modelBuilder.Entity("aspcts_backend.Models.Entities.MilestonesAssessment", b =>
                {
                    b.HasBaseType("aspcts_backend.Models.Entities.Assessment");

                    b.Property<int?>("Level1Score")
                        .HasColumnType("int");

                    b.Property<int?>("Level2Score")
                        .HasColumnType("int");

                    b.Property<int?>("Level3Score")
                        .HasColumnType("int");

                    b.Property<string>("MilestoneScores")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Milestones");
                });

            modelBuilder.Entity("aspcts_backend.Models.Entities.TransitionAssessment", b =>
                {
                    b.HasBaseType("aspcts_backend.Models.Entities.Assessment");

                    b.Property<string>("ReadinessNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransitionScores")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Transition");
                });

            modelBuilder.Entity("aspcts_backend.Models.Entities.Assessment", b =>
                {
                    b.HasOne("aspcts_backend.Models.Entities.Child", "Child")
                        .WithMany("Assessments")
                        .HasForeignKey("ChildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("aspcts_backend.Models.Entities.Psychologist", "Psychologist")
                        .WithMany("Assessments")
                        .HasForeignKey("PsychologistId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Child");

                    b.Navigation("Psychologist");
                });

            modelBuilder.Entity("aspcts_backend.Models.Entities.Child", b =>
                {
                    b.HasOne("aspcts_backend.Models.Entities.Psychologist", "AssignedPsychologist")
                        .WithMany("Children")
                        .HasForeignKey("AssignedPsychologistId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("aspcts_backend.Models.Entities.Parent", "PrimaryParent")
                        .WithMany("PrimaryChildren")
                        .HasForeignKey("PrimaryParentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("aspcts_backend.Models.Entities.Parent", "SecondaryParent")
                        .WithMany("SecondaryChildren")
                        .HasForeignKey("SecondaryParentId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("AssignedPsychologist");

                    b.Navigation("PrimaryParent");

                    b.Navigation("SecondaryParent");
                });

            modelBuilder.Entity("aspcts_backend.Models.Entities.ChildSupportingSkillProgress", b =>
                {
                    b.HasOne("aspcts_backend.Models.Entities.Child", "Child")
                        .WithMany("SupportingSkillProgresses")
                        .HasForeignKey("ChildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("aspcts_backend.Models.Entities.SupportingSkill", "SupportingSkill")
                        .WithMany("ChildProgresses")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Child");

                    b.Navigation("SupportingSkill");
                });

            modelBuilder.Entity("aspcts_backend.Models.Entities.CommunicationMessage", b =>
                {
                    b.HasOne("aspcts_backend.Models.Entities.Child", "Child")
                        .WithMany("CommunicationMessages")
                        .HasForeignKey("ChildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("aspcts_backend.Models.Entities.User", "Receiver")
                        .WithMany()
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("aspcts_backend.Models.Entities.User", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Child");

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("aspcts_backend.Models.Entities.InterventionGoal", b =>
                {
                    b.HasOne("aspcts_backend.Models.Entities.InterventionPlan", "InterventionPlan")
                        .WithMany("InterventionGoals")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InterventionPlan");
                });

            modelBuilder.Entity("aspcts_backend.Models.Entities.InterventionPlan", b =>
                {
                    b.HasOne("aspcts_backend.Models.Entities.Child", "Child")
                        .WithMany("InterventionPlans")
                        .HasForeignKey("ChildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("aspcts_backend.Models.Entities.Psychologist", "Psychologist")
                        .WithMany("InterventionPlans")
                        .HasForeignKey("PsychologistId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Child");

                    b.Navigation("Psychologist");
                });

            modelBuilder.Entity("aspcts_backend.Models.Entities.Parent", b =>
                {
                    b.HasOne("aspcts_backend.Models.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("aspcts_backend.Models.Entities.Psychologist", b =>
                {
                    b.HasOne("aspcts_backend.Models.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("aspcts_backend.Models.Entities.Report", b =>
                {
                    b.HasOne("aspcts_backend.Models.Entities.Child", "Child")
                        .WithMany("Reports")
                        .HasForeignKey("ChildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("aspcts_backend.Models.Entities.Psychologist", "Psychologist")
                        .WithMany("Reports")
                        .HasForeignKey("PsychologistId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Child");

                    b.Navigation("Psychologist");
                });

            modelBuilder.Entity("aspcts_backend.Models.Entities.Session", b =>
                {
                    b.HasOne("aspcts_backend.Models.Entities.Child", "Child")
                        .WithMany("Sessions")
                        .HasForeignKey("ChildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("aspcts_backend.Models.Entities.Psychologist", "Psychologist")
                        .WithMany("Sessions")
                        .HasForeignKey("PsychologistId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Child");

                    b.Navigation("Psychologist");
                });

            modelBuilder.Entity("aspcts_backend.Models.Entities.TaskAnalysisStep", b =>
                {
                    b.HasOne("aspcts_backend.Models.Entities.Milestone", "Milestone")
                        .WithMany("TaskAnalysisSteps")
                        .HasForeignKey("MilestoneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Milestone");
                });

            modelBuilder.Entity("aspcts_backend.Models.Entities.Child", b =>
                {
                    b.Navigation("Assessments");

                    b.Navigation("CommunicationMessages");

                    b.Navigation("InterventionPlans");

                    b.Navigation("Reports");

                    b.Navigation("Sessions");

                    b.Navigation("SupportingSkillProgresses");
                });

            modelBuilder.Entity("aspcts_backend.Models.Entities.InterventionPlan", b =>
                {
                    b.Navigation("InterventionGoals");
                });

            modelBuilder.Entity("aspcts_backend.Models.Entities.Milestone", b =>
                {
                    b.Navigation("TaskAnalysisSteps");
                });

            modelBuilder.Entity("aspcts_backend.Models.Entities.Parent", b =>
                {
                    b.Navigation("PrimaryChildren");

                    b.Navigation("SecondaryChildren");
                });

            modelBuilder.Entity("aspcts_backend.Models.Entities.Psychologist", b =>
                {
                    b.Navigation("Assessments");

                    b.Navigation("Children");

                    b.Navigation("InterventionPlans");

                    b.Navigation("Reports");

                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("aspcts_backend.Models.Entities.SupportingSkill", b =>
                {
                    b.Navigation("ChildProgresses");
                });
#pragma warning restore 612, 618
        }
    }
}
